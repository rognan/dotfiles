" VIM configuration
" ===================================================================== 
" Gracefully degrading .vimrc for use on all my different user accounts
" on different machines with varying operating systems and in different
" upgrade states (disregarding those that only have VI instead of VIM).
"
" Dependencies
" ===================================================================== 
" Ack
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=","
" The <leader> key is by default mapped to '\', so a mapping 'm' 
" can be executed by typing '\m'. It's easier to hit ',' than '\'.
" Who uses ',' anyways ...

augroup vimrc_reload
    autocmd!
    " When your .vimrc file is sourced twice, the autocommands will 
    " appear twice. autocmd! removes all autocommands for the current
    " group.

    if has("gui_running")
        " Reload .vimrc and .gvimrc on save
        autocmd BufWritePost .*imrc,*.vim so $MYVIMRC | so $MYGVIMRC
    else
        autocmd BufWritePost .vimrc,*.vim so $MYVIMRC
    endif
augroup end

silent! call pathogen#infect()
silent! call pathogen#helptags()
" Load plugins (silently: missing pathogen throws errors) 

set tags=./tags,tags/;/
" Tags from directory of current file, then current working directory
" and then from '/'

set nocompatible			
" Enable VIM specific features 
" (No longer VI compliant).

set lazyredraw
" Don't redraw while executing macros (better performance).

set number				
" Display line numbers.

set showmatch
" Show matching brackets when cursor is over them.

set mat=2
" The tenths of a second to blink when matching brackets.

set numberwidth=1			
" Line numbers in single column.

set wildmode=full			
" Cycle between choices on <Tab>.

if has("autocmd")
    filetype plugin indent on
endif

if has("syntax")
    syntax on				
    " Syntax highlighting.
endif

if has("colorscheme")
    silent! colorscheme desert
    " Don't know if this colorscheme exists everywhere.
endif

if has("title")
    set title				
    " Display title in console title bar.
endif

if has("wildmenu")
    set wildmenu				
    " Menu completion on <Tab> in command mode. 
endif

""" Quiet
set noerrorbells			
" No bells or whistles.

set vb t_vb=				
" No visual bell either.

""" Files to ignore while completing

if has("wildignore")
    set wildignore+=*.o,*.obj		" Executables and resources.
    set wildignore+=*.class		" Java.
    set wildignore+=*.pyc,*.pyo,*.egg   " Python.
    set wildignore+=*.git,*.svn	        " Version control.
endif

""" Read/Write
set noautowrite				
" Don't write buffer unless requested.

set noautowriteall			
" Make VIM listen.

set autoread
" Automatically read in changes when a file changes on the filesystem.

set ffs=unix,dos,mac			
" Try recognizing line endings.

""" Search
set ignorecase  			
" Case insensitive search.

set smartcase				
" Unless an upper case is used.

set smarttab				
" Intelligent tab usage.

set grepprg=ack				
" Replace grep with ack.

if has("incsearch")
    set incsearch				
    " Incremental search while typing.
endif

if has("hlsearch")
    set hlsearch				
    " Highlight search hits.
endif

""" Look and feel

set nostartofline			
" Try to preserve column when moving up and down.

set nowrap				
" Don't wrap text.

set cindent				
" Automatically indent braces.

set shiftwidth=4			
" Indent four spaces on braces instead of VIM's default eight.

set softtabstop=4			
" Each indentation level is four spaces.

set expandtab				
" Keep VIM from converting eight spaces into tabs.

set shiftround				
" Rounds indents to a multiple of shiftwidth.

if has("cursorline")
    set cursorline				
    " Line indicating cursor location.
endif

if has("colorcolumn")
    set colorcolumn=72       		
    " Ruler on the right that is appropriate for git messages.
    " This results in prettier git log messages and a better formatted
    " e-mail when performing a git format-patch --stdout.
endif

if has("ruler")
    set ruler				
    " Indicate cursor position at all times.
endif

if has("virtualedit")
    set virtualedit=block			
    " Let cursor move past the last character in <C-v> mode.
endif

if has("linebreak")
    set linebreak				
    " Don't wrap text in the middle of a word.
endif

""" Messages, info and status

set report=0				
" Print changed line count.

set ls=2				
" Show status line.

set laststatus=2			
" Show status line, even if only one window.

set confirm				
" Prompt if closing with unsaved changes.

if has("showcmd")
    set showcmd				
    " Display incomplete normal mode commands while typing.
    " If you add set showcmd you will see your <leader> key appear in the
    " bottom right hand corner of vim, and you will see it disappear when
    " timeoutlen happens (time out is 1000 ms by default).. 
endif
